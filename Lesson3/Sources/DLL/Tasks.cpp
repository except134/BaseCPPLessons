#include "Lesson3DLLPCH.h"

/*
Написать программу, вычисляющую выражение a* (b + (c / d)) и выводящую результат с плавающей точкой, где a, b, c, d – 
целочисленные константы.Используйте static_cast или СStyle cast к float чтобы выполнить точное деление.
Дано целое число.Если оно меньше или равно 21, то выведите на экран разницу между этим числом и числом 21. 
Если же заданное число больше, чем 21, необходимо вывести удвоенную разницу между этим числом и 21. 
При выполнении задания следует использовать тернарный оператор(? : ).
* Описать трёхмерный целочисленный массив, размером 3х3х3 и указатель на значения внутри массива и при помощи операции 
разыменования вывести на экран значение центральной ячейки получившегося куба[1][1][1].
* *Написать программу, вычисляющую выражение из первого задания, а переменные для неё объявлены 
и инициализировать в другом cpp файле.Используйте extern.
*/

int a{};
int b{};
int c{};
int d{};

void Task1()
{
	std::cout << "=================== Task 1 ===================" << std::endl;

	std::cout << "Enter 1 number: ";
	std::cin >> a;
	std::cout << "Enter 2 number: ";
	std::cin >> b;
	std::cout << "Enter 3 number: ";
	std::cin >> c;

	while (d == 0) {
		std::cout << "Enter 4 number (not 0): ";
		std::cin >> d;
	}

	std::cout << a * (b + (c / d)) << std::endl << std::endl;

}

void Task2()
{
	std::cout << "=================== Task 2 ===================" << std::endl;

	std::cout << "Enter integer number: ";
	std::cin >> a;

	b = a <= 21 ? 21 - a : (a - 21) << 1;

	std::cout << "Result is: " << b << std::endl << std::endl;
}

void Task3()
{
	std::cout << "=================== Task 3 ===================" << std::endl;

	int myArray[3][3][3]{};
	int* ptrArray = &myArray[0][0][0];
	*(ptrArray + sizeof(int)*3+1) = 1;

	std::cout << "Result is: " << myArray[1][1][1] << std::endl << std::endl;


}

